//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputSystem/PlayerInputSet.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputSet: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputSet()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputSet"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""0bd2b782-a82d-4684-8693-b703db4ea67c"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""3f6cfb8a-9e5b-4785-bffa-e84e1992561e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""61cd3a52-5afa-43cc-b387-86756ef05579"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""9a40cf3b-7392-4739-8aa4-92f6a1d187d1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""681c1616-bab1-4c91-b97d-2d7474791c7a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CounterAttack"",
                    ""type"": ""Button"",
                    ""id"": ""036fe0a1-b0a5-4649-bad3-c447e4d00f29"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell"",
                    ""type"": ""Button"",
                    ""id"": ""f94b0d76-6466-479d-b827-950278c98713"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RangeAttack"",
                    ""type"": ""Button"",
                    ""id"": ""35fc1cd8-7e20-42b6-a5db-2c955007bdfb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""type"": ""Value"",
                    ""id"": ""24100ce6-f24b-46d9-95af-493029fb6200"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UItimateSpell"",
                    ""type"": ""Button"",
                    ""id"": ""1d0f8fd1-ab58-4c8c-a807-ae825362d075"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""d1f650ae-415f-40c0-940c-5d6a73077cad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickItemSlot1"",
                    ""type"": ""Button"",
                    ""id"": ""2a97d7a0-c3c9-4357-9210-f02298bc726b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickItemSlot2"",
                    ""type"": ""Button"",
                    ""id"": ""ca89bc0a-8240-4752-9bc7-c04043a2c496"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""e4abd981-6734-46ec-8f70-d0a3e1acd96b"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5e689f8e-a56e-4376-a664-4c4230e574fa"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3b9a456a-4f8c-4bd8-a2e0-3241fc45e404"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d9b8bcf8-b10d-447d-8fb8-97dd17a3c165"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""55236907-1df2-4bc6-b14e-acfa9f3b50dd"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c2d45d1f-d7b0-4e47-ac16-511f42d7fc4f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2594297-ff96-4f09-b707-8e280a4d6b75"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""54071e7c-c3ee-423e-b355-784ec8dabecf"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76c604a2-3f40-4479-86be-f5a981d6bd01"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""CounterAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a91ac5b-a630-4d5f-a172-2d55ec0cb4ac"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""Spell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""795d0e12-aca3-426c-8357-acdab7bc6483"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""RangeAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1c6af39-8808-4af8-8054-1b85426e4d89"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9028454-a075-4012-b0eb-5c5d86dd4d68"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""UItimateSpell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44557827-07d5-4589-9317-e44e66735635"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5782845-87cc-44f9-b54f-d7a22af44671"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""QuickItemSlot1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9748715c-fff7-4aec-a703-88cebd57fdec"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""QuickItemSlot2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""95034ee2-44e9-4abc-a2da-c6deff9b2ba8"",
            ""actions"": [
                {
                    ""name"": ""OptionsUI"",
                    ""type"": ""Button"",
                    ""id"": ""8c680372-c8a7-444c-b696-6bf1a8281fbb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InventoryUI"",
                    ""type"": ""Button"",
                    ""id"": ""21abd492-dcfd-4e8e-bb66-f211657f933c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillTreeUI"",
                    ""type"": ""Button"",
                    ""id"": ""bd5fa3b1-08c8-4005-ab65-43317c17bf03"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AtternativeInput"",
                    ""type"": ""Button"",
                    ""id"": ""91aad8b2-b7f7-40ed-8c7b-289a33cbb3c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DialogueInteraction"",
                    ""type"": ""Button"",
                    ""id"": ""22f63a1a-ad14-4d8f-b4e7-8f969620fab7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DialogueNavigation"",
                    ""type"": ""Button"",
                    ""id"": ""f1839222-240c-4b4a-a519-fc1b849d84ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""26015ee7-d1b8-495b-a236-94d849fbc209"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""OptionsUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5037b82-acb9-4b61-9d5f-b377b60a16d6"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""SkillTreeUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15b26654-0b26-43fe-b77a-8c1b2fffa552"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""InventoryUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41d5840c-2b20-4f9c-980e-567e89021c56"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""AtternativeInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e6cf434-9086-4fac-83e1-a22550b5b227"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""DialogueInteraction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""cade590d-a931-4b02-90b0-1c3641b1bfd6"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DialogueNavigation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a8c5d4ed-3635-4972-ad87-d50b1f6c90c0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""DialogueNavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b30bf637-97a1-4391-8ddd-e888ca0d92e3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyBoard&Mouse"",
                    ""action"": ""DialogueNavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyBoard&Mouse"",
            ""bindingGroup"": ""KeyBoard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Dash = m_Player.FindAction("Dash", throwIfNotFound: true);
        m_Player_Attack = m_Player.FindAction("Attack", throwIfNotFound: true);
        m_Player_CounterAttack = m_Player.FindAction("CounterAttack", throwIfNotFound: true);
        m_Player_Spell = m_Player.FindAction("Spell", throwIfNotFound: true);
        m_Player_RangeAttack = m_Player.FindAction("RangeAttack", throwIfNotFound: true);
        m_Player_Mouse = m_Player.FindAction("Mouse", throwIfNotFound: true);
        m_Player_UItimateSpell = m_Player.FindAction("UItimateSpell", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_QuickItemSlot1 = m_Player.FindAction("QuickItemSlot1", throwIfNotFound: true);
        m_Player_QuickItemSlot2 = m_Player.FindAction("QuickItemSlot2", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_OptionsUI = m_UI.FindAction("OptionsUI", throwIfNotFound: true);
        m_UI_InventoryUI = m_UI.FindAction("InventoryUI", throwIfNotFound: true);
        m_UI_SkillTreeUI = m_UI.FindAction("SkillTreeUI", throwIfNotFound: true);
        m_UI_AtternativeInput = m_UI.FindAction("AtternativeInput", throwIfNotFound: true);
        m_UI_DialogueInteraction = m_UI.FindAction("DialogueInteraction", throwIfNotFound: true);
        m_UI_DialogueNavigation = m_UI.FindAction("DialogueNavigation", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Dash;
    private readonly InputAction m_Player_Attack;
    private readonly InputAction m_Player_CounterAttack;
    private readonly InputAction m_Player_Spell;
    private readonly InputAction m_Player_RangeAttack;
    private readonly InputAction m_Player_Mouse;
    private readonly InputAction m_Player_UItimateSpell;
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_QuickItemSlot1;
    private readonly InputAction m_Player_QuickItemSlot2;
    public struct PlayerActions
    {
        private @PlayerInputSet m_Wrapper;
        public PlayerActions(@PlayerInputSet wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Dash => m_Wrapper.m_Player_Dash;
        public InputAction @Attack => m_Wrapper.m_Player_Attack;
        public InputAction @CounterAttack => m_Wrapper.m_Player_CounterAttack;
        public InputAction @Spell => m_Wrapper.m_Player_Spell;
        public InputAction @RangeAttack => m_Wrapper.m_Player_RangeAttack;
        public InputAction @Mouse => m_Wrapper.m_Player_Mouse;
        public InputAction @UItimateSpell => m_Wrapper.m_Player_UItimateSpell;
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @QuickItemSlot1 => m_Wrapper.m_Player_QuickItemSlot1;
        public InputAction @QuickItemSlot2 => m_Wrapper.m_Player_QuickItemSlot2;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @CounterAttack.started += instance.OnCounterAttack;
            @CounterAttack.performed += instance.OnCounterAttack;
            @CounterAttack.canceled += instance.OnCounterAttack;
            @Spell.started += instance.OnSpell;
            @Spell.performed += instance.OnSpell;
            @Spell.canceled += instance.OnSpell;
            @RangeAttack.started += instance.OnRangeAttack;
            @RangeAttack.performed += instance.OnRangeAttack;
            @RangeAttack.canceled += instance.OnRangeAttack;
            @Mouse.started += instance.OnMouse;
            @Mouse.performed += instance.OnMouse;
            @Mouse.canceled += instance.OnMouse;
            @UItimateSpell.started += instance.OnUItimateSpell;
            @UItimateSpell.performed += instance.OnUItimateSpell;
            @UItimateSpell.canceled += instance.OnUItimateSpell;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @QuickItemSlot1.started += instance.OnQuickItemSlot1;
            @QuickItemSlot1.performed += instance.OnQuickItemSlot1;
            @QuickItemSlot1.canceled += instance.OnQuickItemSlot1;
            @QuickItemSlot2.started += instance.OnQuickItemSlot2;
            @QuickItemSlot2.performed += instance.OnQuickItemSlot2;
            @QuickItemSlot2.canceled += instance.OnQuickItemSlot2;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @CounterAttack.started -= instance.OnCounterAttack;
            @CounterAttack.performed -= instance.OnCounterAttack;
            @CounterAttack.canceled -= instance.OnCounterAttack;
            @Spell.started -= instance.OnSpell;
            @Spell.performed -= instance.OnSpell;
            @Spell.canceled -= instance.OnSpell;
            @RangeAttack.started -= instance.OnRangeAttack;
            @RangeAttack.performed -= instance.OnRangeAttack;
            @RangeAttack.canceled -= instance.OnRangeAttack;
            @Mouse.started -= instance.OnMouse;
            @Mouse.performed -= instance.OnMouse;
            @Mouse.canceled -= instance.OnMouse;
            @UItimateSpell.started -= instance.OnUItimateSpell;
            @UItimateSpell.performed -= instance.OnUItimateSpell;
            @UItimateSpell.canceled -= instance.OnUItimateSpell;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @QuickItemSlot1.started -= instance.OnQuickItemSlot1;
            @QuickItemSlot1.performed -= instance.OnQuickItemSlot1;
            @QuickItemSlot1.canceled -= instance.OnQuickItemSlot1;
            @QuickItemSlot2.started -= instance.OnQuickItemSlot2;
            @QuickItemSlot2.performed -= instance.OnQuickItemSlot2;
            @QuickItemSlot2.canceled -= instance.OnQuickItemSlot2;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_OptionsUI;
    private readonly InputAction m_UI_InventoryUI;
    private readonly InputAction m_UI_SkillTreeUI;
    private readonly InputAction m_UI_AtternativeInput;
    private readonly InputAction m_UI_DialogueInteraction;
    private readonly InputAction m_UI_DialogueNavigation;
    public struct UIActions
    {
        private @PlayerInputSet m_Wrapper;
        public UIActions(@PlayerInputSet wrapper) { m_Wrapper = wrapper; }
        public InputAction @OptionsUI => m_Wrapper.m_UI_OptionsUI;
        public InputAction @InventoryUI => m_Wrapper.m_UI_InventoryUI;
        public InputAction @SkillTreeUI => m_Wrapper.m_UI_SkillTreeUI;
        public InputAction @AtternativeInput => m_Wrapper.m_UI_AtternativeInput;
        public InputAction @DialogueInteraction => m_Wrapper.m_UI_DialogueInteraction;
        public InputAction @DialogueNavigation => m_Wrapper.m_UI_DialogueNavigation;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @OptionsUI.started += instance.OnOptionsUI;
            @OptionsUI.performed += instance.OnOptionsUI;
            @OptionsUI.canceled += instance.OnOptionsUI;
            @InventoryUI.started += instance.OnInventoryUI;
            @InventoryUI.performed += instance.OnInventoryUI;
            @InventoryUI.canceled += instance.OnInventoryUI;
            @SkillTreeUI.started += instance.OnSkillTreeUI;
            @SkillTreeUI.performed += instance.OnSkillTreeUI;
            @SkillTreeUI.canceled += instance.OnSkillTreeUI;
            @AtternativeInput.started += instance.OnAtternativeInput;
            @AtternativeInput.performed += instance.OnAtternativeInput;
            @AtternativeInput.canceled += instance.OnAtternativeInput;
            @DialogueInteraction.started += instance.OnDialogueInteraction;
            @DialogueInteraction.performed += instance.OnDialogueInteraction;
            @DialogueInteraction.canceled += instance.OnDialogueInteraction;
            @DialogueNavigation.started += instance.OnDialogueNavigation;
            @DialogueNavigation.performed += instance.OnDialogueNavigation;
            @DialogueNavigation.canceled += instance.OnDialogueNavigation;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @OptionsUI.started -= instance.OnOptionsUI;
            @OptionsUI.performed -= instance.OnOptionsUI;
            @OptionsUI.canceled -= instance.OnOptionsUI;
            @InventoryUI.started -= instance.OnInventoryUI;
            @InventoryUI.performed -= instance.OnInventoryUI;
            @InventoryUI.canceled -= instance.OnInventoryUI;
            @SkillTreeUI.started -= instance.OnSkillTreeUI;
            @SkillTreeUI.performed -= instance.OnSkillTreeUI;
            @SkillTreeUI.canceled -= instance.OnSkillTreeUI;
            @AtternativeInput.started -= instance.OnAtternativeInput;
            @AtternativeInput.performed -= instance.OnAtternativeInput;
            @AtternativeInput.canceled -= instance.OnAtternativeInput;
            @DialogueInteraction.started -= instance.OnDialogueInteraction;
            @DialogueInteraction.performed -= instance.OnDialogueInteraction;
            @DialogueInteraction.canceled -= instance.OnDialogueInteraction;
            @DialogueNavigation.started -= instance.OnDialogueNavigation;
            @DialogueNavigation.performed -= instance.OnDialogueNavigation;
            @DialogueNavigation.canceled -= instance.OnDialogueNavigation;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    private int m_KeyBoardMouseSchemeIndex = -1;
    public InputControlScheme KeyBoardMouseScheme
    {
        get
        {
            if (m_KeyBoardMouseSchemeIndex == -1) m_KeyBoardMouseSchemeIndex = asset.FindControlSchemeIndex("KeyBoard&Mouse");
            return asset.controlSchemes[m_KeyBoardMouseSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnCounterAttack(InputAction.CallbackContext context);
        void OnSpell(InputAction.CallbackContext context);
        void OnRangeAttack(InputAction.CallbackContext context);
        void OnMouse(InputAction.CallbackContext context);
        void OnUItimateSpell(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnQuickItemSlot1(InputAction.CallbackContext context);
        void OnQuickItemSlot2(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnOptionsUI(InputAction.CallbackContext context);
        void OnInventoryUI(InputAction.CallbackContext context);
        void OnSkillTreeUI(InputAction.CallbackContext context);
        void OnAtternativeInput(InputAction.CallbackContext context);
        void OnDialogueInteraction(InputAction.CallbackContext context);
        void OnDialogueNavigation(InputAction.CallbackContext context);
    }
}
